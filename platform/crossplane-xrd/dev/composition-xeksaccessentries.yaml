apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  labels:
    provider: aws
    service: eks-access
  name: eks-access-entries-composition
spec:
  compositeTypeRef:
    apiVersion: infrastructure.skylab.com/v1alpha1
    kind: XEKSAccessEntries
  mode: Resources
  publishConnectionDetailsWithStoreConfigRef:
    name: default
  resources:
    - base:
        apiVersion: eks.aws.upbound.io/v1beta1
        kind: AccessEntry
        spec:
          forProvider:
            principalArn: ""
            type: STANDARD
            tags:
              ManagedBy: crossplane
              AccessType: admin
              PrincipalType: ""
            clusterNameRef:
              name: ""
          providerConfigRef:
            name: default
      name: admin-access-entry-1
      patches:
        - fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
          type: FromCompositeFieldPath
        - fromFieldPath: spec.clusterName
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-admin-1'
                type: Format
              type: string
          type: FromCompositeFieldPath
        - fromFieldPath: spec.clusterName
          toFieldPath: spec.forProvider.clusterNameRef.name
          type: FromCompositeFieldPath
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.awsAccountId
              - fromFieldPath: spec.adminPrincipals[0].type
              - fromFieldPath: spec.adminPrincipals[0].name
            strategy: string
            string:
              fmt: "arn:aws:iam::%s:%s/%s"
          toFieldPath: spec.forProvider.principalArn
          policy:
            fromFieldPath: Optional
        - fromFieldPath: spec.adminPrincipals[0].type
          toFieldPath: spec.forProvider.tags.PrincipalType
          type: FromCompositeFieldPath
          policy:
            fromFieldPath: Optional
      readinessChecks:	
        - matchCondition:	
            status: 'True'	
            type: Ready	
          type: MatchCondition

    - base:
        apiVersion: eks.aws.upbound.io/v1beta1
        kind: AccessPolicyAssociation
        spec:
          forProvider:
            accessScope:
              - type: cluster
            policyArn: arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy
            principalArn: ""
            clusterNameRef:
              name: ""
          providerConfigRef:
            name: default
      name: admin-policy-association-1
      patches:
        - fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
          type: FromCompositeFieldPath
        - fromFieldPath: spec.clusterName
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-admin-policy-1'
                type: Format
              type: string
          type: FromCompositeFieldPath
        - fromFieldPath: spec.clusterName
          toFieldPath: spec.forProvider.clusterNameRef.name
          type: FromCompositeFieldPath
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.awsAccountId
              - fromFieldPath: spec.adminPrincipals[0].type
              - fromFieldPath: spec.adminPrincipals[0].name
            strategy: string
            string:
              fmt: "arn:aws:iam::%s:%s/%s"
          toFieldPath: spec.forProvider.principalArn
          policy:
            fromFieldPath: Optional
      readinessChecks:	
        - matchCondition:	
            status: 'True'	
            type: Ready	
          type: MatchCondition

    - base:
        apiVersion: eks.aws.upbound.io/v1beta1
        kind: AccessEntry
        spec:
          forProvider:
            principalArn: ""
            type: STANDARD
            tags:
              ManagedBy: crossplane
              AccessType: admin
              PrincipalType: ""
            clusterNameRef:
              name: ""
          providerConfigRef:
            name: default
      name: admin-access-entry-2
      patches:
        - fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
          type: FromCompositeFieldPath
        - fromFieldPath: spec.clusterName
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-admin-2'
                type: Format
              type: string
          type: FromCompositeFieldPath
        - fromFieldPath: spec.clusterName
          toFieldPath: spec.forProvider.clusterNameRef.name
          type: FromCompositeFieldPath
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.awsAccountId
              - fromFieldPath: spec.adminPrincipals[1].type
              - fromFieldPath: spec.adminPrincipals[1].name
            strategy: string
            string:
              fmt: "arn:aws:iam::%s:%s/%s"
          toFieldPath: spec.forProvider.principalArn
          policy:
            fromFieldPath: Optional
        - fromFieldPath: spec.adminPrincipals[1].type
          toFieldPath: spec.forProvider.tags.PrincipalType
          type: FromCompositeFieldPath
          policy:
            fromFieldPath: Optional
      readinessChecks:	
        - matchCondition:	
            status: 'True'	
            type: Ready	
          type: MatchCondition

    - base:
        apiVersion: eks.aws.upbound.io/v1beta1
        kind: AccessPolicyAssociation
        spec:
          forProvider:
            accessScope:
              - type: cluster
            policyArn: arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy
            principalArn: ""
            clusterNameRef:
              name: ""
          providerConfigRef:
            name: default
      name: admin-policy-association-2
      patches:
        - fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
          type: FromCompositeFieldPath
        - fromFieldPath: spec.clusterName
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-admin-policy-2'
                type: Format
              type: string
          type: FromCompositeFieldPath
        - fromFieldPath: spec.clusterName
          toFieldPath: spec.forProvider.clusterNameRef.name
          type: FromCompositeFieldPath
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.awsAccountId
              - fromFieldPath: spec.adminPrincipals[1].type
              - fromFieldPath: spec.adminPrincipals[1].name
            strategy: string
            string:
              fmt: "arn:aws:iam::%s:%s/%s"
          toFieldPath: spec.forProvider.principalArn
          policy:
            fromFieldPath: Optional
      readinessChecks:	
        - matchCondition:	
            status: 'True'	
            type: Ready	
          type: MatchCondition

    - base:
        apiVersion: eks.aws.upbound.io/v1beta1
        kind: AccessEntry
        spec:
          forProvider:
            principalArn: ""
            type: STANDARD
            tags:
              ManagedBy: crossplane
              AccessType: readonly
              PrincipalType: ""
            clusterNameRef:
              name: ""
          providerConfigRef:
            name: default
      name: readonly-access-entry-1
      patches:
        - fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
          type: FromCompositeFieldPath
        - fromFieldPath: spec.clusterName
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-readonly-1'
                type: Format
              type: string
          type: FromCompositeFieldPath
        - fromFieldPath: spec.clusterName
          toFieldPath: spec.forProvider.clusterNameRef.name
          type: FromCompositeFieldPath
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.awsAccountId
              - fromFieldPath: spec.readonlyPrincipals[0].type
              - fromFieldPath: spec.readonlyPrincipals[0].name
            strategy: string
            string:
              fmt: "arn:aws:iam::%s:%s/%s"
          toFieldPath: spec.forProvider.principalArn
          policy:
            fromFieldPath: Optional
        - fromFieldPath: spec.readonlyPrincipals[0].type
          toFieldPath: spec.forProvider.tags.PrincipalType
          type: FromCompositeFieldPath
          policy:
            fromFieldPath: Optional
      readinessChecks:	
        - matchCondition:	
            status: 'True'	
            type: Ready	
          type: MatchCondition

    - base:
        apiVersion: eks.aws.upbound.io/v1beta1
        kind: AccessPolicyAssociation
        spec:
          forProvider:
            accessScope:
              - type: cluster
            policyArn: arn:aws:eks::aws:cluster-access-policy/AmazonEKSAdminViewPolicy
            principalArn: ""
            clusterNameRef:
              name: ""
          providerConfigRef:
            name: default
      name: readonly-policy-association-1
      patches:
        - fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
          type: FromCompositeFieldPath
        - fromFieldPath: spec.clusterName
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-readonly-policy-1'
                type: Format
              type: string
          type: FromCompositeFieldPath
        - fromFieldPath: spec.clusterName
          toFieldPath: spec.forProvider.clusterNameRef.name
          type: FromCompositeFieldPath
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.awsAccountId
              - fromFieldPath: spec.readonlyPrincipals[0].type
              - fromFieldPath: spec.readonlyPrincipals[0].name
            strategy: string
            string:
              fmt: "arn:aws:iam::%s:%s/%s"
          toFieldPath: spec.forProvider.principalArn
          policy:
            fromFieldPath: Optional
      readinessChecks:	
        - matchCondition:	
            status: 'True'	
            type: Ready	
          type: MatchCondition

    - base:
        apiVersion: eks.aws.upbound.io/v1beta1
        kind: AccessEntry
        spec:
          forProvider:
            principalArn: ""
            type: STANDARD
            tags:
              ManagedBy: crossplane
              AccessType: readonly
              PrincipalType: ""
            clusterNameRef:
              name: ""
          providerConfigRef:
            name: default
      name: readonly-access-entry-2
      patches:
        - fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
          type: FromCompositeFieldPath
        - fromFieldPath: spec.clusterName
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-readonly-2'
                type: Format
              type: string
          type: FromCompositeFieldPath
        - fromFieldPath: spec.clusterName
          toFieldPath: spec.forProvider.clusterNameRef.name
          type: FromCompositeFieldPath
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.awsAccountId
              - fromFieldPath: spec.readonlyPrincipals[1].type
              - fromFieldPath: spec.readonlyPrincipals[1].name
            strategy: string
            string:
              fmt: "arn:aws:iam::%s:%s/%s"
          toFieldPath: spec.forProvider.principalArn
          policy:
            fromFieldPath: Optional
        - fromFieldPath: spec.readonlyPrincipals[1].type
          toFieldPath: spec.forProvider.tags.PrincipalType
          type: FromCompositeFieldPath
          policy:
            fromFieldPath: Optional
      readinessChecks:	
        - matchCondition:	
            status: 'True'	
            type: Ready	
          type: MatchCondition

    - base:
        apiVersion: eks.aws.upbound.io/v1beta1
        kind: AccessPolicyAssociation
        spec:
          forProvider:
            accessScope:
              - type: cluster
            policyArn: arn:aws:eks::aws:cluster-access-policy/AmazonEKSAdminViewPolicy
            principalArn: ""
            clusterNameRef:
              name: ""
          providerConfigRef:
            name: default
      name: readonly-policy-association-2
      patches:
        - fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
          type: FromCompositeFieldPath
        - fromFieldPath: spec.clusterName
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-readonly-policy-2'
                type: Format
              type: string
          type: FromCompositeFieldPath
        - fromFieldPath: spec.clusterName
          toFieldPath: spec.forProvider.clusterNameRef.name
          type: FromCompositeFieldPath
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.awsAccountId
              - fromFieldPath: spec.readonlyPrincipals[1].type
              - fromFieldPath: spec.readonlyPrincipals[1].name
            strategy: string
            string:
              fmt: "arn:aws:iam::%s:%s/%s"
          toFieldPath: spec.forProvider.principalArn
          policy:
            fromFieldPath: Optional
      readinessChecks:	
        - matchCondition:	
            status: 'True'	
            type: Ready	
          type: MatchCondition

  writeConnectionSecretsToNamespace: crossplane-system