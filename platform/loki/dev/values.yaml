loki:
  auth_enabled: false
  
  limits_config:
    structured_metadata_byte_limit: 1024  # Limit structured metadata size
    allow_structured_metadata: true
    per_stream_rate_limit: 3MB
    per_stream_rate_limit_burst: 15MB
    ingestion_rate_mb: 10
    ingestion_burst_size_mb: 20
    max_line_size: 256KB
    
  server:
    log_level: info
    http_listen_port: 3100
    grpc_listen_port: 9095

  querier:
    max_concurrent: 4

  schemaConfig:
    configs:
    - from: "2024-04-01"
      store: tsdb
      object_store: s3
      schema: v13
      index:
        prefix: loki_index_
        period: 24h

  storage:
    bucketNames:
      chunks: loki-chunks
      ruler: loki-ruler
      admin: loki-admin
    s3:
      access_key_id: ${ACCESS_KEY_ID}
      secret_access_key: ${SECRET_ACCESS_KEY}
      endpoint: https://minio.skylarhoughtongithub.local
      s3ForcePathStyle: true

extraEnvFrom:
  - secretRef:
      name: loki-bucket-creds

global:
  dnsService: kube-dns

gateway:
  enabled: true
  nginxConfig:
    httpSnippet: |
      # Add health check endpoints
      map $request_uri $health_check {
        /ready "health";
        /metrics "health";
        /config "health";
        default "api";
      }
    serverSnippet: |
      # Add missing health endpoints
      location = /ready {
        proxy_pass http://loki-read.loki.svc.cluster.local:3100$request_uri;
      }
      location = /metrics {
        proxy_pass http://loki-read.loki.svc.cluster.local:3100$request_uri;
      }
  ingress:
    enabled: true
    ingressClassName: traefik
    hosts:
      - host: loki.skylarhoughtongithub.local
        paths:
          - path: /
            pathType: Prefix
    annotations:
      cert-manager.io/issuer: step-ca-cluster-issuer
      cert-manager.io/issuer-kind: StepClusterIssuer  
      cert-manager.io/issuer-group: certmanager.step.sm
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
    tls:
      - secretName: loki-tls
        hosts:
          - loki.skylarhoughtongithub.local

read:
  replicas: 1

write:
  replicas: 1

backend:
  replicas: 1